"use strict";(self.webpackChunkid_lineardev_docs=self.webpackChunkid_lineardev_docs||[]).push([[899],{9233:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var i=t(4848),s=t(8453);const o={sidebar_position:1},r="Introduction",a={id:"introduction",title:"Introduction",description:"Overview",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/introduction",permalink:"/docs/introduction",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Authentication & Authorization",permalink:"/docs/authentication_authorization"}},c={},l=[{value:"Overview",id:"overview",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Getting Started",id:"getting-started",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"Welcome to the ID LinearDev Single Sign-On (SSO) API documentation. Our API leverages OAuth 2.0 protocols to provide a secure and seamless authentication and authorization mechanism for your applications. By using our SSO API, you can enable users to log in once and gain access to multiple applications without needing to re-authenticate."}),"\n",(0,i.jsx)(n.p,{children:"OAuth 2.0 is a widely adopted authorization framework that allows third-party applications to obtain limited access to user resources on a server, without exposing user credentials. Our SSO API extends this framework to streamline user authentication and integrate with various applications and services."}),"\n",(0,i.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,i.jsx)(n.p,{children:"Our SSO API is designed for various scenarios, including:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Single Sign-On (SSO) Integration: Allow users to access multiple applications or services with a single set of credentials."}),"\n",(0,i.jsx)(n.li,{children:"API Authorization: Securely manage and authorize access to APIs for different applications."}),"\n",(0,i.jsx)(n.li,{children:"Token Management: Handle token issuance, validation, and refresh to maintain user sessions."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Client Management: Generate and manage client credentials, including Client ID and Client Secret."}),"\n",(0,i.jsx)(n.li,{children:"Authorization Code Flow: Implement the OAuth 2.0 authorization code flow for secure user authentication."}),"\n",(0,i.jsx)(n.li,{children:"Token Issuance: Obtain access tokens and refresh tokens for authenticated sessions."}),"\n",(0,i.jsx)(n.li,{children:"Token Refresh: Refresh expired access tokens to maintain continuous user access."}),"\n",(0,i.jsx)(n.li,{children:"Security: Robust security mechanisms to protect user credentials and tokens."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsx)(n.p,{children:"To get started with our SSO API, follow these steps:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Obtain Client Credentials: Register your application to receive a Client ID and Client Secret. These credentials are essential for interacting with the API."}),"\n",(0,i.jsx)(n.li,{children:"Authorization Request: Direct users to authorize your application to access their data. This involves redirecting users to an authorization endpoint."}),"\n",(0,i.jsx)(n.li,{children:"Handle Authorization Code: Once the user authorizes the application, handle the authorization code received and exchange it for an access token."}),"\n",(0,i.jsx)(n.li,{children:"Use Access Token: Use the access token to make authenticated API requests on behalf of the user."}),"\n",(0,i.jsx)(n.li,{children:"Refresh Tokens: Manage token expiration and refresh tokens to ensure uninterrupted access."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Refer to the ",(0,i.jsx)(n.a,{href:"https://id.lineardev.net/docs/api-endpoints",children:"API Endpoints"})," section for detailed information on each API endpoint, including request parameters, response formats, and examples."]}),"\n",(0,i.jsx)(n.p,{children:"For more detailed integration guides, security practices, and troubleshooting tips, explore the relevant sections in this documentation."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);